# Generated by Django 5.2.7 on 2025-10-09 19:35

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='GasCylinder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cylinder_id', models.CharField(max_length=50, unique=True)),
                ('size', models.CharField(choices=[('6kg', '6kg'), ('13kg', '13kg'), ('50kg', '50kg')], max_length=10)),
                ('current_gas_level', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('max_capacity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_available', models.BooleanField(default=True)),
                ('location', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('admin', 'Admin'), ('waste_collector', 'Waste Collector'), ('kitchen_manager', 'Community Kitchen Manager'), ('distributor', 'Distributor'), ('customer', 'Customer')], max_length=20)),
                ('phone', models.CharField(max_length=15)),
                ('zone', models.CharField(blank=True, max_length=50, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customuser_groups', related_query_name='customuser', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_permissions', related_query_name='customuser', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomerAccrual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('customer', models.OneToOneField(limit_choices_to={'user_type': 'customer'}, on_delete=django.db.models.deletion.CASCADE, to='core.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='Biodigester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('capacity_kg', models.DecimalField(decimal_places=2, max_digits=10)),
                ('current_level', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('manager', models.ForeignKey(limit_choices_to={'user_type': 'kitchen_manager'}, on_delete=django.db.models.deletion.CASCADE, to='core.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='Distribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distribution_date', models.DateTimeField(auto_now_add=True)),
                ('gas_amount_kg', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_per_kg', models.DecimalField(decimal_places=2, default=150.0, max_digits=10)),
                ('payment_method', models.CharField(choices=[('mpesa', 'M-Pesa'), ('cash', 'Cash'), ('accrual', 'Accrual Redemption')], max_length=20)),
                ('is_delivered', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(limit_choices_to={'user_type': 'customer'}, on_delete=django.db.models.deletion.CASCADE, related_name='distributions', to='core.customuser')),
                ('distributor', models.ForeignKey(limit_choices_to={'user_type': 'distributor'}, on_delete=django.db.models.deletion.CASCADE, to='core.customuser')),
                ('cylinder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.gascylinder')),
            ],
        ),
        migrations.CreateModel(
            name='OpenKitchenSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_date', models.DateTimeField(auto_now_add=True)),
                ('duration_minutes', models.IntegerField()),
                ('gas_used_kg', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(max_length=20)),
                ('is_paid', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(limit_choices_to={'user_type': 'customer'}, on_delete=django.db.models.deletion.CASCADE, related_name='customer_kitchen_sessions', to='core.customuser')),
                ('kitchen_manager', models.ForeignKey(limit_choices_to={'user_type': 'kitchen_manager'}, on_delete=django.db.models.deletion.CASCADE, related_name='managed_kitchen_sessions', to='core.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='SystemReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('waste_trends', 'Waste Trends'), ('zone_performance', 'Zone Performance'), ('biodigester_efficiency', 'Biodigester Efficiency'), ('sales_revenue', 'Sales & Revenue'), ('compliance', 'Compliance Report')], max_length=30)),
                ('generation_date', models.DateTimeField(auto_now_add=True)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('report_data', models.JSONField()),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='WasteCollectionPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('zone', models.CharField(choices=[('western', 'Western'), ('kisumu', 'Kisumu'), ('kakamega', 'Kakamega'), ('nyakach', 'Nyakach'), ('nyando', 'Nyando')], max_length=20)),
                ('location', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('manager', models.ForeignKey(limit_choices_to={'user_type': 'waste_collector'}, on_delete=django.db.models.deletion.CASCADE, to='core.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='WasteCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('waste_type', models.CharField(choices=[('agricultural', 'Agricultural Waste'), ('household', 'Household Waste'), ('animal', 'Animal Waste')], max_length=20)),
                ('quantity_kg', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('collection_date', models.DateTimeField(auto_now_add=True)),
                ('rate_per_kg', models.DecimalField(decimal_places=2, default=10.0, max_digits=10)),
                ('payment_type', models.CharField(choices=[('cash', 'Cash'), ('accrual', 'Accrual')], max_length=10)),
                ('is_paid', models.BooleanField(default=False)),
                ('invoice_number', models.CharField(max_length=20, unique=True)),
                ('customer', models.ForeignKey(limit_choices_to={'user_type': 'customer'}, on_delete=django.db.models.deletion.CASCADE, to='core.customuser')),
                ('collection_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.wastecollectionpoint')),
            ],
        ),
    ]
